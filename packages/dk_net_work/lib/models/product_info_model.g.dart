// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'product_info_model.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

_$ProductInfoModelImpl _$$ProductInfoModelImplFromJson(
        Map<String, dynamic> json) =>
    _$ProductInfoModelImpl(
      productid: json['productid'] as String?,
      title: json['title'] as String?,
      productview: json['productview'] == null
          ? null
          : Productview.fromJson(json['productview'] as Map<String, dynamic>),
      memberamount: json['Memberamount'] as String?,
      couponlist: json['couponlist'] as List<dynamic>?,
      makelist: json['makelist'] as List<dynamic>?,
      levelname: json['levelname'] as String?,
      memberlevels: (json['Memberlevels'] as List<dynamic>?)
          ?.map((e) => Memberlevel.fromJson(e as Map<String, dynamic>))
          .toList(),
      content: json['content'] as String?,
      grouprules: json['grouprules'] as String?,
      groupmin: json['groupmin'] as String?,
      groupmax: json['groupmax'] as String?,
      jfproduct: json['jfproduct'] == null
          ? null
          : Jfproduct.fromJson(json['jfproduct'] as Map<String, dynamic>),
      insurance: (json['insurance'] as num?)?.toInt(),
      isInsurance: (json['is_insurance'] as num?)?.toInt(),
      esignature: (json['esignature'] as num?)?.toInt(),
      insuranceAgreement: json['insurance_agreement'] as String?,
    );

Map<String, dynamic> _$$ProductInfoModelImplToJson(
        _$ProductInfoModelImpl instance) =>
    <String, dynamic>{
      'productid': instance.productid,
      'title': instance.title,
      'productview': instance.productview,
      'Memberamount': instance.memberamount,
      'couponlist': instance.couponlist,
      'makelist': instance.makelist,
      'levelname': instance.levelname,
      'Memberlevels': instance.memberlevels,
      'content': instance.content,
      'grouprules': instance.grouprules,
      'groupmin': instance.groupmin,
      'groupmax': instance.groupmax,
      'jfproduct': instance.jfproduct,
      'insurance': instance.insurance,
      'is_insurance': instance.isInsurance,
      'esignature': instance.esignature,
      'insurance_agreement': instance.insuranceAgreement,
    };

_$JfproductImpl _$$JfproductImplFromJson(Map<String, dynamic> json) =>
    _$JfproductImpl(
      id: (json['id'] as num?)?.toInt(),
      categoryId: (json['category_id'] as num?)?.toInt(),
      categoryName: json['category_name'] as String?,
      title: json['title'] as String?,
      image: json['image'] as String?,
      integral: (json['integral'] as num?)?.toInt(),
    );

Map<String, dynamic> _$$JfproductImplToJson(_$JfproductImpl instance) =>
    <String, dynamic>{
      'id': instance.id,
      'category_id': instance.categoryId,
      'category_name': instance.categoryName,
      'title': instance.title,
      'image': instance.image,
      'integral': instance.integral,
    };

_$MemberlevelImpl _$$MemberlevelImplFromJson(Map<String, dynamic> json) =>
    _$MemberlevelImpl(
      name: json['name'] as String?,
      rate: (json['rate'] as num?)?.toDouble(),
    );

Map<String, dynamic> _$$MemberlevelImplToJson(_$MemberlevelImpl instance) =>
    <String, dynamic>{
      'name': instance.name,
      'rate': instance.rate,
    };

_$ProductviewImpl _$$ProductviewImplFromJson(Map<String, dynamic> json) =>
    _$ProductviewImpl(
      id: (json['id'] as num?)?.toInt(),
      categoryId: (json['category_id'] as num?)?.toInt(),
      categoryName: json['category_name'] as String?,
      title: json['title'] as String?,
      bljg: json['bljg'] as String?,
      xmgm: (json['xmgm'] as num?)?.toInt(),
      xmjd: (json['xmjd'] as num?)?.toInt(),
      qtje: (json['qtje'] as num?)?.toInt(),
      zgje: json['zgje'] as String?,
      isgao: (json['isgao'] as num?)?.toInt(),
      ktje: json['ktje'],
      jyrsy: json['jyrsy'] as String?,
      tqsyyj: json['tqsyyj'] as String?,
      shijian: json['shijian'] as String?,
      pic: json['pic'] as String?,
      content: json['content'] as String?,
      qxdw: json['qxdw'] as String?,
      hkfs: (json['hkfs'] as num?)?.toInt(),
      cishu: json['cishu'],
      tzzt: (json['tzzt'] as num?)?.toInt(),
      isft: (json['isft'] as num?)?.toInt(),
      ftjl: (json['ftjl'] as num?)?.toInt(),
      level: (json['level'] as num?)?.toInt(),
      issy: (json['issy'] as num?)?.toInt(),
      issj: (json['issj'] as num?)?.toInt(),
      isdt: (json['isdt'] as num?)?.toInt(),
      iswj: (json['iswj'] as num?)?.toInt(),
      sort: (json['sort'] as num?)?.toInt(),
      tzyq: (json['tzyq'] as num?)?.toInt(),
      createdAt: json['created_at'] == null
          ? null
          : DateTime.parse(json['created_at'] as String),
      updatedAt: json['updated_at'] == null
          ? null
          : DateTime.parse(json['updated_at'] as String),
      cycle: (json['cycle'] as num?)?.toInt(),
      istzbug: (json['istzbug'] as num?)?.toInt(),
      isnew: (json['isnew'] as num?)?.toInt(),
      doubled: (json['doubled'] as num?)?.toInt(),
      countequity: (json['countequity'] as num?)?.toInt(),
      bugunmber: (json['bugunmber'] as num?)?.toInt(),
      ismake: (json['ismake'] as num?)?.toInt(),
      endingtime: json['endingtime'] as String?,
      isaouttm: (json['isaouttm'] as num?)?.toInt(),
      intervalTime: (json['interval_time'] as num?)?.toInt(),
      riseTime: json['rise_time'],
      frequency: (json['frequency'] as num?)?.toInt(),
      riseSettings: json['rise_settings'],
      rise: (json['rise'] as num?)?.toDouble(),
      coupon: json['coupon'] as String?,
      givecoupon: json['givecoupon'] as String?,
      oldmoney: json['oldmoney'] as String?,
      daikuan: json['daikuan'] as String?,
      equity: json['equity'] as String?,
      integralgive: json['integralgive'] as String?,
      nextintegralgive: (json['nextintegralgive'] as num?)?.toInt(),
      ticket: (json['ticket'] as num?)?.toInt(),
      beans: (json['beans'] as num?)?.toInt(),
      xxtcbl: json['xxtcbl'] as String?,
      xxtcbll: json['xxtcbll'] as String?,
      xxtcblll: json['xxtcblll'] as String?,
      xxtcbllll: json['xxtcbllll'] as String?,
      jiechuhetong: (json['jiechuhetong'] as num?)?.toInt(),
      discount: (json['discount'] as num?)?.toInt(),
      discountlist: json['discountlist'] as String?,
      capital: (json['capital'] as num?)?.toInt(),
      specialbenefits: json['specialbenefits'] as String?,
      bjzk: (json['bjzk'] as num?)?.toInt(),
      endtime: json['endtime'],
      zengsongid: (json['zengsongid'] as num?)?.toInt(),
      nextpid: (json['nextpid'] as num?)?.toInt(),
      jfpid: (json['jfpid'] as num?)?.toInt(),
      joining: (json['joining'] as num?)?.toInt(),
      organizer: (json['organizer'] as num?)?.toInt(),
      isgroup: (json['isgroup'] as num?)?.toInt(),
      isGroupLerver: (json['is_group_lerver'] as num?)?.toInt(),
      extmoney: (json['extmoney'] as num?)?.toInt(),
      extday: (json['extday'] as num?)?.toInt(),
      groupcbl: json['groupcbl'] as String?,
      isnorate: (json['isnorate'] as num?)?.toInt(),
      presale: (json['presale'] as num?)?.toInt(),
      firstbuy: (json['firstbuy'] as num?)?.toInt(),
      insurance: (json['insurance'] as num?)?.toInt(),
      ftAfterSuccess: (json['ft_after_success'] as num?)?.toInt(),
      presentLevel: (json['present_level'] as num?)?.toInt(),
      returnDividends: (json['return_dividends'] as num?)?.toInt(),
      returnCapital: (json['return_capital'] as num?)?.toInt(),
      isAggregatedAmount: (json['is_aggregated_amount'] as num?)?.toInt(),
      links: json['links'] as String?,
      hdSel: json['hd_sel'] as bool?,
      hdInfo: json['hd_info'] as String?,
      text6: json['text_6'] as String?,
      text7: json['text_7'] as String?,
      text5: json['text_5'] as String?,
      settlement: json['settlement'] as String?,
      profitTerm: json['profit_term'] as String?,
      ismake2: (json['ismake2'] as num?)?.toInt(),
      dividendMethod: json['dividend_method'] as String?,
      presentLevelName: json['present_level_name'] as String?,
      presentLevelText: json['present_level_text'] as String?,
      canCreateGroup: (json['can_create_group'] as num?)?.toInt(),
      keshouyi: (json['keshouyi'] as num?)?.toInt(),
      inviteOnly: (json['invite_only'] as num?)?.toInt(),
    );

Map<String, dynamic> _$$ProductviewImplToJson(_$ProductviewImpl instance) =>
    <String, dynamic>{
      'id': instance.id,
      'category_id': instance.categoryId,
      'category_name': instance.categoryName,
      'title': instance.title,
      'bljg': instance.bljg,
      'xmgm': instance.xmgm,
      'xmjd': instance.xmjd,
      'qtje': instance.qtje,
      'zgje': instance.zgje,
      'isgao': instance.isgao,
      'ktje': instance.ktje,
      'jyrsy': instance.jyrsy,
      'tqsyyj': instance.tqsyyj,
      'shijian': instance.shijian,
      'pic': instance.pic,
      'content': instance.content,
      'qxdw': instance.qxdw,
      'hkfs': instance.hkfs,
      'cishu': instance.cishu,
      'tzzt': instance.tzzt,
      'isft': instance.isft,
      'ftjl': instance.ftjl,
      'level': instance.level,
      'issy': instance.issy,
      'issj': instance.issj,
      'isdt': instance.isdt,
      'iswj': instance.iswj,
      'sort': instance.sort,
      'tzyq': instance.tzyq,
      'created_at': instance.createdAt?.toIso8601String(),
      'updated_at': instance.updatedAt?.toIso8601String(),
      'cycle': instance.cycle,
      'istzbug': instance.istzbug,
      'isnew': instance.isnew,
      'doubled': instance.doubled,
      'countequity': instance.countequity,
      'bugunmber': instance.bugunmber,
      'ismake': instance.ismake,
      'endingtime': instance.endingtime,
      'isaouttm': instance.isaouttm,
      'interval_time': instance.intervalTime,
      'rise_time': instance.riseTime,
      'frequency': instance.frequency,
      'rise_settings': instance.riseSettings,
      'rise': instance.rise,
      'coupon': instance.coupon,
      'givecoupon': instance.givecoupon,
      'oldmoney': instance.oldmoney,
      'daikuan': instance.daikuan,
      'equity': instance.equity,
      'integralgive': instance.integralgive,
      'nextintegralgive': instance.nextintegralgive,
      'ticket': instance.ticket,
      'beans': instance.beans,
      'xxtcbl': instance.xxtcbl,
      'xxtcbll': instance.xxtcbll,
      'xxtcblll': instance.xxtcblll,
      'xxtcbllll': instance.xxtcbllll,
      'jiechuhetong': instance.jiechuhetong,
      'discount': instance.discount,
      'discountlist': instance.discountlist,
      'capital': instance.capital,
      'specialbenefits': instance.specialbenefits,
      'bjzk': instance.bjzk,
      'endtime': instance.endtime,
      'zengsongid': instance.zengsongid,
      'nextpid': instance.nextpid,
      'jfpid': instance.jfpid,
      'joining': instance.joining,
      'organizer': instance.organizer,
      'isgroup': instance.isgroup,
      'is_group_lerver': instance.isGroupLerver,
      'extmoney': instance.extmoney,
      'extday': instance.extday,
      'groupcbl': instance.groupcbl,
      'isnorate': instance.isnorate,
      'presale': instance.presale,
      'firstbuy': instance.firstbuy,
      'insurance': instance.insurance,
      'ft_after_success': instance.ftAfterSuccess,
      'present_level': instance.presentLevel,
      'return_dividends': instance.returnDividends,
      'return_capital': instance.returnCapital,
      'is_aggregated_amount': instance.isAggregatedAmount,
      'links': instance.links,
      'hd_sel': instance.hdSel,
      'hd_info': instance.hdInfo,
      'text_6': instance.text6,
      'text_7': instance.text7,
      'text_5': instance.text5,
      'settlement': instance.settlement,
      'profit_term': instance.profitTerm,
      'ismake2': instance.ismake2,
      'dividend_method': instance.dividendMethod,
      'present_level_name': instance.presentLevelName,
      'present_level_text': instance.presentLevelText,
      'can_create_group': instance.canCreateGroup,
      'keshouyi': instance.keshouyi,
      'invite_only': instance.inviteOnly,
    };
